name: Lint

permissions: {} # no need for any permissions

on:
  workflow_call:
    inputs:
      jobTimeoutMinutes:
        description: 'Overall job timeout in minutes'
        default: 10
        required: false
        type: number
      golangciLintTimeout:
        description: 'Value to pass to golangci-lint --timeout'
        default: '5m'
        required: false
        type: string

jobs:
  discover-modules:
    uses: ./.github/workflows/modules.yml

  lint-repo:
    name: Lint repository
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(inputs.jobTimeoutMinutes || 10) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          check-latest: true

      - name: Go Format
        run: gofmt -s -w . && git diff --exit-code

      - name: Go Imports
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          goimports -w . && git diff --exit-code

      - name: Golangci-Lint
        uses: golangci/golangci-lint-action@v7
        with:
          args: --timeout ${{ inputs.golangciLintTimeout || '5m' }}

  lint-modules:
    name: Lint modules
    runs-on: ubuntu-latest
    needs: discover-modules
    timeout-minutes: ${{ fromJSON(inputs.jobTimeoutMinutes || 10) }}
    strategy:
      fail-fast: true
      matrix:
        module: ${{ fromJSON(needs.discover-modules.outputs.modules) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          check-latest: true

      - name: Go Tidy
        working-directory: ${{ matrix.module }}
        run: go mod tidy && git diff --exit-code

      - name: Go Generate
        working-directory: ${{ matrix.module }}
        run: go generate ./... && git diff --exit-code

      - name: Go Vet
        working-directory: ${{ matrix.module }}
        run: go vet ./...

      - name: Install go-licenses
        run: go install github.com/google/go-licenses@latest

      - name: Check licenses
        working-directory: ${{ matrix.module }}
        run: |
          go-licenses check --include_tests --disallowed_types=forbidden,restricted,unknown ./...
