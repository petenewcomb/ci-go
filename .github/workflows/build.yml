name: build

permissions: {} # no need for any permissions

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
  - cron: '0 14 * * 6' # run each Saturday at 2pm UTC
  workflow_call:
    inputs:
      groupSuffix:
        description: 'Concurrency group suffix to allow multiple jobs'
        default: ''
        required: false
        type: string
      jobTimeoutMinutes:
        description: 'Overall job timeout in minutes'
        required: false
        type: number
      skipGenerate:
        description: 'Skip "go generate"'
        default: true
        required: false
        type: boolean
      buildTags:
        description: 'Build tags to use.'
        required: false
        type: string
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}${{ inputs.groupSuffix }}
  cancel-in-progress: true

jobs:
  run:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(inputs.jobTimeoutMinutes || 5) }}
    strategy:
      fail-fast: true
      matrix:
        go: ['stable', 'oldstable']

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: Go Mod
        run: go mod download

      - name: Go Mod Verify
        run: go mod verify

      - name: Go Generate
        if: ${{ !inputs.skipGenerate }}
        run: go generate ./... && git diff --exit-code

      - name: Go Build
        run: go build -o=/dev/null ${{ inputs.buildTags && '-tags='+inputs.buildTags || '' }} ./...

      - name: Go Compile Tests
        run: go test -exec=/bin/true ${{ inputs.buildTags && '-tags='+inputs.buildTags || '' }} ./...

      - name: Go Benchmark
        run: go test -v -shuffle=on ${{ inputs.buildTags && '-tags='+inputs.buildTags || '' }} -run=^$ -bench=. -benchtime=1x ./...
