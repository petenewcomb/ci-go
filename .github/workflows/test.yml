name: Test

permissions:
  contents: write # to update coverage report on the wiki

on:
  workflow_call:
    inputs:
      groupSuffix:
        description: 'Concurrency group suffix to allow multiple jobs'
        default: ''
        required: false
        type: string
      jobTimeoutMinutes:
        description: 'Overall job timeout in minutes'
        default: 15
        required: false
        type: number
      buildTags:
        description: 'Build tags to use.'
        required: false
        type: string
      testTimeout:
        description: 'Value to pass to go test -timeout'
        default: '10m'
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}${{ inputs.groupSuffix }}
  cancel-in-progress: true

jobs:
  run:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(inputs.jobTimeoutMinutes) }}
    strategy:
      fail-fast: true
      matrix:
        go: ['stable', 'oldstable']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: Go Test
        run: |
          go test -v -timeout='${{ inputs.testTimeout }}' -shuffle=on \
             ${{ inputs.buildTags && format("-tags='{0}'", inputs.buildTags) || '' }} \
             -cpu 1,2,4 -race -count=1 -coverprofile=coverage.txt -coverpkg ./...

      - name: Update coverage report
        if: ${{ matrix.go == 'stable' && github.event_name == 'push' }}
        uses: ncruces/go-coverage-report@v0
        with:
          amend: true
