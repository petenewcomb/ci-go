name: Test

permissions:
  contents: write # to update coverage report on the wiki

on:
  workflow_call:
    inputs:
      jobTimeoutMinutes:
        description: 'Overall job timeout in minutes'
        default: 15
        required: false
        type: number
      buildTags:
        description: 'Build tags to use.'
        default: ''
        required: false
        type: string
      shortTimeoutMinutes:
        description: 'Timeout for short tests in minutes'
        default: 5
        required: false
        type: number
      short1CpuTimeoutMinutes:
        description: 'Timeout for short 1-cpu tests in minutes'
        default: 5
        required: false
        type: number
      shortRaceTimeoutMinutes:
        description: 'Timeout for short race tests in minutes'
        default: 10
        required: false
        type: number
      fullTimeoutMinutes:
        description: 'Timeout for full tests in minutes'
        default: 10
        required: false
        type: number
      full1CpuTimeoutMinutes:
        description: 'Timeout for full 1-cpu tests in minutes'
        default: 10
        required: false
        type: number
      fullRaceTimeoutMinutes:
        description: 'Timeout for full race tests in minutes'
        default: 15
        required: false
        type: number

jobs:
  discover-modules:
    uses: ./.github/workflows/modules.yml

  test-short:
    name: Test (short)
    runs-on: ubuntu-latest
    needs: discover-modules
    timeout-minutes: ${{ matrix.test-config.timeoutMinutes + 5 }}
    strategy:
      fail-fast: true
      matrix:
        go: ['stable', 'oldstable']
        module: ${{ fromJSON(needs.discover-modules.outputs.modules) }}
        test-config:
          - { name: "default", args: "-short", timeoutMinutes: "${{ inputs.shortTimeoutMinutes }}" }
          - { name: "1 cpu", args: "-short -cpu 1", timeoutMinutes: "${{ inputs.short1CpuTimeoutMinutes }}" }
          - { name: "race", args: "-short -race", timeoutMinutes: "${{ inputs.shortRaceTimeoutMinutes }}" }

    steps:
      - name: Run tests
        uses: ./.github/actions/run-go-tests
        with:
          go-version: ${{ matrix.go }}
          module-path: ${{ matrix.module }}
          test-args: ${{ matrix.test-config.args }}
          timeout: ${{ matrix.test-config.timeoutMinutes }}m
          build-tags: ${{ inputs.buildTags }}

  test-full:
    name: Test (full)
    runs-on: ubuntu-latest
    needs: discover-modules
    timeout-minutes: ${{ matrix.test-config.timeoutMinutes + 5 }}
    strategy:
      fail-fast: true
      matrix:
        go: ['stable', 'oldstable']
        module: ${{ fromJSON(needs.discover-modules.outputs.modules) }}
        test-config:
          - { name: "coverage", args: "-bench=. -benchtime=1x -coverprofile=coverage.txt -coverpkg=./...", timeoutMinutes: "${{ inputs.fullTimeoutMinutes }}" }
          - { name: "1 cpu", args: "-bench=. -benchtime=1x -cpu 1", timeoutMinutes: "${{ inputs.full1CpuTimeoutMinutes }}" }
          - { name: "race", args: "-race -bench=. -benchtime=1x", timeoutMinutes: "${{ inputs.fullRaceTimeoutMinutes }}" }

    steps:
      - name: Run tests
        uses: ./.github/actions/run-go-tests
        with:
          go-version: ${{ matrix.go }}
          module-path: ${{ matrix.module }}
          test-args: ${{ matrix.test-config.args }}
          timeout: ${{ matrix.test-config.timeoutMinutes }}m
          build-tags: ${{ inputs.buildTags }}

      - name: Update coverage report
        if: ${{ matrix.go == 'stable' && matrix.module == '.' && matrix.test-config.name == 'coverage' && github.event_name == 'push' }}
        uses: ncruces/go-coverage-report@v0
        with:
          coverage-file: ${{ matrix.module }}/coverage.txt
          amend: true
